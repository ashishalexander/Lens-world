<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <style>
        .card-title {
            text-align: center;
        }
    </style>
</head>
<body>
    <%- include('adminNav.ejs') %>
    <div class="container-fluid d-flex p-0 ">
        <%- include('adminSidebar.ejs') %>
       
        <div class="container-fluid">
            
            <div class="row form-row justify-content-center">
                <div class="col-12 col-sm-4 col-lg-6">
                    <div class="card mt-5">
                        <div class="card-body">
                            <h5 class="card-title">Category</h5>
                            <form action="/admin/editCateg/<%= data._id %>" method="post">
                                <div class="mb-3 mt-3">
                                    <label for="categoryName" class="form-label">Name</label>
                                    <input type="text" class="form-control" id="categoryName" name="Categoryitem" required value="<%= data.name %>">
                                    <div id="alertMessage" class="alert alert-dismissible fade show mt-3" role="alert" style="display: none;">
                                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="itemDescription" class="form-label">Description</label>
                                    <textarea class="form-control" id="itemDescription" name="CategoryDescription" rows="3" required><%= data.description %></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary" onclick="submitForm(event)">Submit</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            
        </div>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

        <script>
            async function submitForm(event) {
                event.preventDefault();

                const id = "<%= data._id %>";
                const name = document.getElementById('categoryName').value;
                const description = document.getElementById('itemDescription').value;

                try {
                    const response = await fetch(`/admin/editCateg/${id}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ name, description }),
                    });

                    if (response.ok) {
                        const responseData = await response.json();
                        console.log('Server response:', responseData);

                        // Check if the update was successful
                        if (responseData.category) {
                            // Update the UI or perform other actions as needed
                            console.log('Category updated successfully');

                            // Display success message
                            showAlert('Category updated successfully', 'alert-success');
                            // Redirect or perform other actions here
                            window.location.href = '/admin/categoryMgm';
                        } else {
                            // Handle unsuccessful update
                            console.log('Category update failed');
                        }
                    } else {
                        // Handle different error scenarios based on response status
                        switch (response.status) {
                            case 400:
                                const errorData = await response.json();
                                if (errorData.error === "Category name must be unique.") {
                                    // Display error message for unique category name
                                    showAlert('Category must be unique', 'alert-danger');
                                } else {
                                    // Display a generic error alert for other errors
                                    showAlert('Bad Request: ' + errorData.error, 'alert-danger');
                                }
                                break;
                            case 404:
                                // Display error message for category not found
                                showAlert('Category not found', 'alert-danger');
                                break;
                            default:
                                // Display a generic error alert for other errors
                                showAlert('An error occurred while updating the category', 'alert-danger');
                        }
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            }

            // Function to show Bootstrap alert
            function showAlert(message, alertClass) {
                const alertMessage = document.getElementById('alertMessage');
                alertMessage.innerHTML = `<div class="alert ${alertClass}" role="alert">${message}</div>`;
                alertMessage.style.display = 'block';

                // Hide the alert after 3 seconds
                setTimeout(() => {
                    alertMessage.style.display = 'none';
                }, 3000);
            }
        </script>
    </body>
</html>
