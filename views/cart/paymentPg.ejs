<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/css/cart.css">
    <style>
        .hide-button {
          display: none;
        }
    </style>
   
</head>
<body>
    <%- include("../user/userNav") %>
        <div class="container" style="margin-top: 50px; margin-bottom: 25px;">
                <div class="wrapper wrapper-content animated fadeInRight">
                    <div class="row">
                        <div class="col-md-9">
                            <div class="ibox">
                                <div class="ibox-title">
                                    <span class="pull-right">(<strong><%= userCart.items.length %></strong>) items</span>
                                    <h5>Order Summary</h5>
                                </div>
                                <div class="ibox-content">
                                    <div class="table-responsive">
                                        <table class="table shoping-cart-table">
                                            <tbody>
                                                <% userCart.items.forEach( element=> { %>
                                                    <tr>
                                                        <td width="90">
                                                            <div class="cart-product-imitation">
                                                                <img src="/<%= element.product.imageUrl[0] %>"
                                                                    style="width: 100%">
                                                            </div>
                                                        </td>
                                                        <td class="desc">
                                                            <h3>
                                                                <a href="#" class="text-navy">
                                                                    <%= element.product.name %>
                                                                </a>
                                                            </h3>
                                                            <p class="small">
                                                                <%= element.product.description %>
                                                            </p>
                                                            <dl class="small m-b-none">
                                                                <dt>Description lists</dt>
                                                                <dd>
                                                                    BRAND: <%= element.product.brand %>
                                                                        <br>
                                                                        CATEGORY:<%= element.product.category %>
                                                                </dd>
                                                            </dl>  
                                                        </td>
                                                        
                                                        <td>
                                                            <h4><i class="fa-solid fa-indian-rupee-sign"></i><%= element.price %></h4>
                                                        </td>
                                                    </tr>

                                                <% }) %>

                                            </tbody>
                                        </table>
                                    </div>
                                </div> 

                                <div class="ibox-content " style="height:60px">
                                    <button class="btn btn-primary pull-right" data-bs-toggle="modal" data-bs-target="#couponModal">
                                        <i class="fa fa fa-shopping-cart"></i> Add a coupon
                                    </button>

                                </div>

                            </div>
                        <!-- Modal -->
                        <div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="couponModalLabel">Add Coupon</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form id="couponForm"  method="post" action="/coupon/couponValidation">
                                            <div class="mb-3">
                                                <label for="couponCode" class="form-label">Coupon Code</label>
                                                <input type="text" class="form-control" name="code" id="couponCode" placeholder="Enter coupon code">
                                                <small class="text-danger" id="couponCodeError"></small>

                                            </div>
                                            <br>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                <button type="submit" class="btn btn-primary">Apply Coupon</button>
                                               
                                            </div>
                                        </form>
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                        </div>
                        <div class="col-md-3">
                            <div class="ibox">
                                <div class="ibox-title">
                                    <h5>PRICE DETAILS</h5>
                                </div>
                                <div class="ibox-content">
                                    <span style="font-size: 20px;"> Total Price : <i class="fa-solid fa-indian-rupee-sign"></i>  <%= userCart.totalPrice %>
                                    </span>
                                    <br>
                                    <% if (userCart.subtotal!=0) { %>
                                        <span style="font-size: 20px;"> Discount Amt :<i class="fa-solid fa-indian-rupee-sign"></i> <%= userCart.totalPrice-userCart.subtotal %></span>
                                        <br>
                                        <span style="font-size: 20px;">Sub Total: <i class="fa-solid fa-indian-rupee-sign"></i> <%= userCart.subtotal %></span>
                                        <br>   
                                    <% } %>
                                   
                                    <hr/>
                                    <span class="text-muted small ">
                                        Click the button to place order
                                    </span>
                                    <div class="m-t-sm mt-2">
                                        <div class="btn-group">
                                            <a href="#"  id="checkoutBtn" class="btn btn-primary btn-sm hide-button">
                                                Checkout</a>
                                            <button id="rzp-button1"class="" >Pay</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="container mt-4">
                            <div class="row">
                                <div class="col-12 col-sm-12 ">
                                    <div class="container-fluid addAddress p-3 mb-3" style="height:70px;background-color: rgb(255, 255, 255); border: 1px solid #000;">
                                        <a href="/cart/addNewAddressCheckOut">ADD NEW ADDRESS</a>
                                    </div>
                
                                    <% data.address.forEach((address,index) => { %>
                                        <div class="container-fluid addressbox d-flex justify-content-between p-2 mt-2" style="height:80px;background-color: rgb(218, 214, 214);">
                                           <div class="left d-flex">
                                                <!-- Add a radio button for each address -->
                                                <% 
                                                    // Extracting the first name from the address
                                                    const parts = address.split(/[, ]+/);
                                                    const firstName = parts[0];
                                                    const lastname = parts[1];
                                                %>
                                                <div class="form-check me-2">
                                                    <input class="form-check-input address-radio" type="radio" name="addressRadio" id="address<%= index %>" value="<%= index %> "
                                                           data-name="<%= firstName +' '+ lastname %>" data-address="<%= address %>"  <%= index === 0 ? 'checked' : '' %>>
                                                </div>
                                                <div class="details">
                                                    
                                                    <h6><%= firstName +' '+ lastname %></h6>
                                                    <p><%= address %></p>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                    
                                </div>
                            </div>
                        </div>
                        <div class="container mt-4">
                            <div class="row">
                                <div class="col-12 col-sm-12 " >
                                    <div class="container-fluid p-2" style="height:45px;background-color: rgb(71, 71, 210); border: 1px solid #000; color:rgb(255, 255, 255)">
                                        <h5>Payment method</h5>
                                    </div>
                                    <div class="container-fluid"  style="height:45px;background-color: rgb(240, 240, 244); border-bottom: 1px solid #000; border-right: 1px solid #000; border-left: 1px solid #000;">
                                        <div class="form-check " style="padding-top: 10px;">
                                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2" value="COD" >
                                            <label class="form-check-label" for="flexRadioDefault2">
                                                Cash On Delivery (COD)
                                            </label>
                                            <span id="codErrorMessage" class="text-danger"></span>

                                        </div>
                                        
                                    </div>
                                    <div class="container-fluid"  style="height:45px;background-color: rgb(240, 240, 244); border-bottom: 1px solid #000; border-right: 1px solid #000; border-left: 1px solid #000;">
                                        <div class="form-check" style="padding-top: 10px;">
                                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault3" value="onlinepayment" checked >
                                            <label class="form-check-label" for="flexRadioDefault3">
                                                Online Payment
                                            </label>
                                        </div>
                                        
                                    </div>
                                    <div class="container-fluid"  style="height:45px;background-color: rgb(240, 240, 244); border-bottom: 1px solid #000; border-right: 1px solid #000; border-left: 1px solid #000;">
                                        <div class="form-check" style="padding-top: 10px;">
                                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault4" value="wallet" >
                                            <label class="form-check-label" for="flexRadioDefault4">
                                                wallet
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    <%- include("../user/userFooter") %>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var codButton = document.getElementById('checkoutBtn');
            var onlinePaymentButton = document.getElementById('rzp-button1');

            function toggleButtons() {
                var codRadio = document.getElementById('flexRadioDefault2');
                var onlinePaymentRadio = document.getElementById('flexRadioDefault3');
                var walletRadio = document.getElementById('flexRadioDefault4')

                if (onlinePaymentRadio.checked) {
                    codButton.classList.add('hide-button');
                    onlinePaymentButton.classList.remove('hide-button');
                } else if (codRadio.checked || walletRadio.checked) {
                    codButton.classList.remove('hide-button');
                    onlinePaymentButton.classList.add('hide-button');
                }
            }

            document.getElementById('flexRadioDefault2').addEventListener('change', toggleButtons);
            document.getElementById('flexRadioDefault3').addEventListener('change', toggleButtons);
            document.getElementById('flexRadioDefault4').addEventListener('change', toggleButtons);


            // Checkout Button Click
            $('#checkoutBtn').on('click', async function () {
                try {
                    // Retrieve the selected values using data attributes
                    var selectedName = $('.address-radio:checked').data('name');
                    var selectedAddress = $('.address-radio:checked').data('address');
                    var paymentMethod = $('input[name="flexRadioDefault"]:checked').val();
                    var userId = '<%=userCart.user%>'; // Replace with your actual user ID retrieval logic

                    // Call the checkout fetch logic
                    const response = await fetch('/cart/placeOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            userId: userId,
                            shippingAddress: selectedAddress,
                            paymentMethod: paymentMethod
                        }),
                    });

                    // Redirect or perform other actions based on the response
                    if (response.ok) {
                        const data = await response.json();
                        console.log('Server response for checkout:', data.message);
                         window.location.href = "/cart/orderSuccessPg";
                    }else{
                        const errorData = await response.json();
                        const errorMessage = errorData.message;
                        Swal.fire({
                            icon: "error",
                            title: "Oops...",
                            text: errorMessage,
                            footer: '<a href="#">Why do I have this issue?</a>'
                   });
                    }
                } catch (error) {
                    console.error('Error during checkout fetch:', error);
                    // Handle errors, show a message, etc.
                    
                }
            });

            // Razorpay Button Click
            $('#rzp-button1').on('click', async function () {
                try {
                    // Retrieve the selected values using data attributes
                    var selectedName = $('.address-radio:checked').data('name');
                    var selectedAddress = $('.address-radio:checked').data('address');
                    var paymentMethod = $('input[name="flexRadioDefault"]:checked').val();
                    var userId = '<%=userCart.user%>'; // Replace with your actual user ID retrieval logic

                    // Call the Razorpay fetch logic
                    const responseone = await fetch('/cart/onlinePayment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            userId: userId,
                            shippingAddress: selectedAddress,
                            paymentMethod: paymentMethod
                        }),
                    });

                    // Redirect or perform other actions based on the response
                    if (responseone.ok) {
                        const data = await responseone.json();
                        console.log('Server response for Razorpay:', data.orderId);
                        // window.location.href = "/cart/orderSuccessPg";
                    }
                } catch (error) {
                    console.error('Error during Razorpay fetch:', error);
                    // Handle errors, show a message, etc.
                }
            });
        });
    </script>
 
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
var amount = `<%= userCart.subtotal != 0 ? userCart.subtotal * 100 : userCart.totalPrice * 100 %>`;

var options = {
    "key": "rzp_test_Go829W6FzY8Q7j", // Enter the Key ID generated from the Dashboard
    "amount":parseInt(amount),
    "currency": "INR",
    "name": "Lens World", //your business name
    "description": "Test Transaction",
    "image": "https://example.com/your_logo",
    "order_id": "<%= data.orderId %>", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
    "callback_url": "/cart/paymentCapture",
    "prefill": { //We recommend using the prefill parameter to auto-fill customer's contact information especially their phone number
        "name": "Ashish Alexander", //your customer's name
        "email": "ashishalex29@gmail.com",
        "contact": "7994929152" //Provide the customer's phone number for better conversion rates 
    },
    "notes": {
        "address": "Razorpay Corporate Office"
    },
    "theme": {
        "color": "#3399cc"
    },
   
};
var rzp1 = new Razorpay(options);

// Event listener for error event
rzp1.on('payment.error', function(error) {
    var selectedAddress = $('.address-radio:checked').data('address');

    // Handle payment failure
    console.error('Payment failed:', error);
    // Redirect to failure page or display error message
    window.location.href = `/cart/paymentfailure/${selectedAddress}`;
});

document.getElementById('rzp-button1').onclick = function(e){
    rzp1.open();
    e.preventDefault();

}
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const couponForm = document.getElementById('couponForm');

        couponForm.addEventListener('submit', async function() {
            event.preventDefault(); // Prevent default form submission

            const formData = new FormData(couponForm);
            const couponCode = formData.get('code');
            const couponCodeError = document.getElementById('couponCodeError'); // Moved inside the event listener

            // Validate coupon code format
            if (!couponCode) {
                console.log("ji")
                couponCodeError.textContent = 'Coupon code is required';

                // Remove error message after 3 seconds
                setTimeout(() => {
                    couponCodeError.textContent = '';
                }, 3000);

                return;
            }
            
            try {
                console.log('hio')
                const response = await fetch('/coupon/couponValidation', {
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ code: couponCode })
                });
                const responseData = await response.json();
                if (!response.ok) {
                    Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text:  responseData.error,
                    footer: '<a href="#">Why do I have this issue?</a>'
                });
                    throw new Error(`Failed to apply coupon: ${response.status}`);
                }

               
                console.log('Coupon applied successfully:', responseData);

                window.location.reload()
                // Close the modal if needed
                const modal = new bootstrap.Modal(document.getElementById('couponModal'));
                modal.hide();

                
                // You can add any additional logic here, such as updating the UI
       


            } catch (error) {
                console.error('Error applying coupon:', error);
                // Handle the error, show a message to the user, etc.
                
            }
        });
    });

</script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Function to toggle payment methods based on total price
        function togglePaymentMethods() {
            var totalPrice =` <%= userCart.totalPrice %>`; // Get the total price from the server-side variable
            var codRadio = document.getElementById('flexRadioDefault2'); // Cash On Delivery radio button
            var codMessage = document.getElementById('codErrorMessage'); // Message element

            // If total price is greater than 1000, disable COD payment method
            if (totalPrice > 1000) {
                codRadio.disabled = true;
                // Show a message to the user informing them that COD is not available for orders above 1000
                codMessage.innerText = 'COD is not available for orders above 1000';
            } else {
                codRadio.disabled = false;
                // Reset the message when COD becomes available again
                codMessage.innerText = '';
            }
        }

        // Call the function initially to set payment methods based on the initial total price
        togglePaymentMethods();

        // Add an event listener to update payment methods if the total price changes dynamically
        document.addEventListener('cartTotalPriceUpdated', function(event) {
            // Call the function to update payment methods when the total price changes
            togglePaymentMethods();
        });
    });
</script>


</body>
</html>